// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var f=t,c=function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r},_=e()?f:c;function p(r,e,t,n,o){var a,i,u,l;if(r<=0)return n;if(1===t&&1===o){if((u=r%8)>0)for(l=0;l<u;l++)n[l]=e[l];if(r<8)return n;for(l=u;l<r;l+=8)n[l]=e[l],n[l+1]=e[l+1],n[l+2]=e[l+2],n[l+3]=e[l+3],n[l+4]=e[l+4],n[l+5]=e[l+5],n[l+6]=e[l+6],n[l+7]=e[l+7];return n}for(a=t<0?(1-r)*t:0,i=o<0?(1-r)*o:0,l=0;l<r;l++)n[i]=e[a],a+=t,i+=o;return n}function b(r,e,t,n,o,a,i){var u,l,f,c;if(r<=0)return o;if(u=n,l=i,1===t&&1===a){if((f=r%8)>0)for(c=0;c<f;c++)o[l]=e[u],u+=t,l+=a;if(r<8)return o;for(c=f;c<r;c+=8)o[l]=e[u],o[l+1]=e[u+1],o[l+2]=e[u+2],o[l+3]=e[u+3],o[l+4]=e[u+4],o[l+5]=e[u+5],o[l+6]=e[u+6],o[l+7]=e[u+7],u+=8,l+=8;return o}for(c=0;c<r;c++)o[l]=e[u],u+=t,l+=a;return o}(function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})})(p,"ndarray",b);export{p as default,b as ndarray};
//# sourceMappingURL=mod.js.map
