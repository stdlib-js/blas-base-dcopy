// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(e){"use strict";var r,t="function"==typeof Object.defineProperty?Object.defineProperty:null,o=Object.defineProperty,n=Object.prototype,i=n.toString,a=n.__defineGetter__,f=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;function c(e,r,t,o,n){var i,a,f,u;if(e<=0)return o;if(1===t&&1===n){if((f=e%8)>0)for(u=0;u<f;u++)o[u]=r[u];if(e<8)return o;for(u=f;u<e;u+=8)o[u]=r[u],o[u+1]=r[u+1],o[u+2]=r[u+2],o[u+3]=r[u+3],o[u+4]=r[u+4],o[u+5]=r[u+5],o[u+6]=r[u+6],o[u+7]=r[u+7];return o}for(i=t<0?(1-e)*t:0,a=n<0?(1-e)*n:0,u=0;u<e;u++)o[a]=r[i],i+=t,a+=n;return o}function p(e,r,t,o,n,i,a){var f,u,l,c;if(e<=0)return n;if(f=o,u=a,1===t&&1===i){if((l=e%8)>0)for(c=0;c<l;c++)n[u]=r[f],f+=t,u+=i;if(e<8)return n;for(c=l;c<e;c+=8)n[u]=r[f],n[u+1]=r[f+1],n[u+2]=r[f+2],n[u+3]=r[f+3],n[u+4]=r[f+4],n[u+5]=r[f+5],n[u+6]=r[f+6],n[u+7]=r[f+7],f+=8,u+=8;return n}for(c=0;c<e;c++)n[u]=r[f],f+=t,u+=i;return n}r=function(){try{return t({},"x",{}),!0}catch(e){return!1}}()?o:function(e,r,t){var o,c,p,_;if("object"!=typeof e||null===e||"[object Array]"===i.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===i.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(e,r)||l.call(e,r)?(o=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=o):e[r]=t.value),p="get"in t,_="set"in t,c&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&a&&a.call(e,r,t.get),_&&f&&f.call(e,r,t.set),e},r(c,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:p}),e.default=c,e.ndarray=p,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).dcopy={});
//# sourceMappingURL=index.js.map
